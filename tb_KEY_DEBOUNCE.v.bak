module tb_KEY_DEBOUNCE;

    reg clk;
    reg reset;
    reg key_in;
    wire key_out;

    // Instantiate the key debounce module
    key_debounce uut (
        .clk(clk),
        .reset(reset),
        .key_in(key_in),
        .key_out(key_out)
    );

    // Clock signal generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk; // 10ns clock period => 100MHz clock
    end

    // Test cases
    initial begin
        // Initialize signals
        reset = 1;
        key_in = 0;
        #15 reset = 0; // Release reset signal

        // Simulate key jitter
        #20 key_in = 1; #10 key_in = 0; #10 key_in = 1; #10 key_in = 0;
        #10 key_in = 1; #100 key_in = 0; #30 key_in = 1;

        // End simulation
        #200 $stop;
    end
endmodule
